{
  "name": "Jacksonxu1991.GitHub.io",
  "tagline": "jiaqi's blog",
  "body": "# Lower_Bound和Upper_Bound的实现\r\n\r\nlower_bound和upper_bound是C++的标准函数,所以日常使用完全没有必要自己实现,不过,这么经典的算法,还是得要求自己能够秒秒钟搞定,编译运行无错.\r\n\r\nlower_bound和upper_bound不完全等同于二分查找,它俩返回的不是有没有,而是返回新数据的插入位置.\r\n\r\n在php和lua语言里是没有直接能拿来用的函数的,在C++和Python里是有现成代码的.\r\n\r\nlower_bound和upper_bound的差别只有一个小于号和小于等于号的差别,以下是我的实现:\r\n```cpp\r\nuint32_t lower_bound(int arr[], int len, int val)\r\n{\r\n    int beg = 0;\r\n    int end = len;\r\n    int mid;\r\n    while (beg < end) {\r\n        mid = (beg + end) >> 1;\r\n        if (arr[mid] < val) {\r\n            beg = mid + 1;\r\n        } else {\r\n            end = mid;\r\n        }   \r\n    }   \r\n    return beg;\r\n}\r\n```\r\n\r\n```cpp\r\nuint32_t upper_bound(int arr[], int len, int val)\r\n{\r\n    int beg = 0;\r\n    int end = len;\r\n    int mid;\r\n    while (beg < end) {\r\n        mid = (beg + end) >> 1;\r\n        if (arr[mid] <= val) {\r\n            beg = mid + 1;\r\n        } else {\r\n            end = mid;\r\n        }   \r\n    }   \r\n    return beg;\r\n}\r\n```\r\n试用举例:\r\n```cpp\r\nint main()\r\n{\r\n    int arr[] = {1, 3, 4, 8, 8, 10, 12, 23};\r\n    cout << lower_bound(arr, 8, 8) << endl;\r\n    cout << lower_bound(arr, 8, 88) << endl;\r\n    cout << lower_bound(arr, 8, 0) << endl;\r\n    return 0;\r\n}\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}